/**
 *
 * Container 
 *
 */

//Creates the breakpoints for containers
@each $modifier, $breakpoint in $map-grid-props {
    @include create-mediaquery($breakpoint) {
        @if($breakpoint == 0) {
            .container {
                max-width: $grid-breakpoint-tab * 1px - 50px;
            }
        } @else {
            .container {
                max-width: $breakpoint * 1px - 50px;
            }
        }
    }
}

.container,
.container-fullwidth {
    width: 100%;
    padding-right: $column-padding;
    padding-left: $column-padding;
    margin-right: auto;
    margin-left: auto;
}

.container--fullwidth {
    margin: 0;
    max-width: 100%;
}

/**
 *
 * Rows 
 *
 */

.row {
    display: flex;
    flex-wrap: wrap;
    // margin-right: -0.75rem;
    // margin-left: -0.75rem;
}

//No gap class, padding
.no-gaps > [class^="col-"] {
    padding: 0;
}

/**
 *
 * Columns
 *
 */

//Common Column Properties
%column-props {
    position: relative;
    width: 100%;
    padding-left: $column-padding;
    padding-right: $column-padding;
}

@each $modifier, $breakpoint in $map-grid-props { 
    .col#{$modifier}-auto {
        @extend %column-props;
    }
    @for $i from 1 through $grid-columns {
        .col#{$modifier}-#{$i} {
            @extend %column-props;
        }
    }
}

// Columns & Offset
@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
    @include create-mediaquery($breakpoint) {
        //Columns
        .col#{$modifier}-auto {
            flex: 0 0 auto;
            width: auto;
            max-width: 100%;
        }
        @for $i from 1 through $grid-columns {
            .col#{$modifier}-#{$i} {
                flex-basis: (100 / ($grid-columns / $i) ) * 1%;
            }
        }
        .col#{$modifier}-offset-0 {
            margin-left: 0;
        }
        //Offsets
        @for $i from 1 through $grid-columns {
            .offset#{$modifier}-#{$i} {
                margin-left: (100 / ($grid-columns / $i) ) * 1%;
            }
        }
    }
}

@each $modifier, $breakpoint in $map-grid-props {
    @include create-col-classes($modifier, $grid-columns, $breakpoint );
}


/**
 *
 * Order
 *
 */
@each $modifier, $breakpoint in $map-grid-props { 
    @include create-mediaquery($breakpoint) {
        .order#{$modifier}-first {
            order: -1;
        }
        .order#{$modifier}-last {
            order: $grid-columns + 1;
        }
        @for $i from 1 through $grid-columns {
            .order#{$modifier}-#{$i} {
                order: #{$i};
            }
        }
    }
}

/**
 *
 * Display
 *
 */
@each $modifier, $breakpoint in $map-grid-props { 
    @include create-mediaquery($breakpoint) {
        .d#{$modifier}-none {
            display: none;
        }
        .d#{$modifier}-inline {
            display: inline;
        }
        .d#{$modifier}-inline-block {
            display: inline-block;
        }
        .d#{$modifier}-block {
            display: block;
        }
    }
}

