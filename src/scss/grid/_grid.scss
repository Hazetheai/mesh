//_grid.scss
//
//Main grid system, containers, rows & columns.

.container {
	width: 100%;
	padding-right: $gap-width;
	padding-left: $gap-width;
	margin-right: auto;
	margin-left: auto;
}

.container-fullwidth {
	margin: 0;
	width: 100%;
	padding-left: $gap-width;
	padding-right: $gap-width;
}

//Creates the breakpoints for containers
@each $modifier, $breakpoint in $map-grid-props {
	@include create-mediaquery($breakpoint) {
		@if ($breakpoint != 0) {
			.container {
				max-width: $breakpoint * 1px - 50px;
			}
		} 
	}
}

.row {
	display: flex;
	flex-wrap: wrap;
}

//No gap class, padding
.no-gaps > [class^='col-'] {
	padding-left: 0;
	padding-right: 0;
}

//Common Column Properties
%column-props {
	position: relative;
	width: 100%;
	padding-left: $gap-width;
	padding-right: $gap-width;
}

@each $modifier, $breakpoint in $map-grid-props {
	.col#{$modifier}-auto {
		@extend %column-props;
	}
	@for $i from 1 through $grid-columns {
		.col#{$modifier}-#{$i} {
			@extend %column-props;
		}
	}
}

// Columns & Offset
@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
	@include create-mediaquery($breakpoint) {
		//Columns
		.col#{$modifier}-auto {
			flex: 0 0 auto;
			width: auto;
			max-width: 100%;
		}
		@for $i from 1 through $grid-columns {
			.col#{$modifier}-#{$i} {
				flex-basis: (100 / ($grid-columns / $i)) * 1%;
			}
		}
		.col#{$modifier}-offset-0 {
			margin-left: 0;
		}
		//Offsets
		@for $i from 1 through $grid-columns {
			.offset#{$modifier}-#{$i} {
				margin-left: (100 / ($grid-columns / $i)) * 1%;
			}
		}
	}
}

@each $modifier, $breakpoint in $map-grid-props {
	@include create-col-classes($modifier, $grid-columns, $breakpoint);
}
